apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: falco
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://falcosecurity.github.io/charts
    chart: falco
    targetRevision: 4.2.2
    helm:
      parameters:
        - name: falco.grpc.enabled
          value: "true"
        - name: falco.grpcOutput.enabled
          value: "true"
        - name: falco.webserver.enabled
          value: "true"
        - name: falco.webserver.k8sHealthzEndpoint
          value: "true"
        - name: falco.fileOutput.enabled
          value: "true"
        - name: falco.fileOutput.keepAlive
          value: "true"
        - name: falco.fileOutput.filename
          value: "/var/log/falco/events.txt"
        - name: falco.syscall.enabled
          value: "true"
        - name: falco.k8sAudit.enabled
          value: "true"
        - name: falco.k8sRuntimeSecurity.enabled
          value: "true"
        - name: falco.priority
          value: "debug"
        - name: falco.bufferedOutputs
          value: "false"
        - name: falcosidekick.enabled
          value: "true"
      values: |
        driver:
          enabled: true
          kind: ebpf
        collectors:
          enabled: true
        falcoctl:
          artifact:
            install:
              enabled: true
            follow:
              enabled: true
        resources:
          requests:
            cpu: 100m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1024Mi
        nodeSelector:
          kubernetes.io/os: linux
        tolerations:
          - effect: NoSchedule
            key: node-role.kubernetes.io/master
          - effect: NoSchedule
            key: node-role.kubernetes.io/control-plane
        serviceMonitor:
          enabled: false
        
        falcosidekick:
          enabled: true
          replicas: 1
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
          config:
            slack:
              webhookurl: ""
            elasticsearch:
              hostport: ""
            loki:
              hostport: ""
            webhook:
              address: ""
            customfields: "source:falco"
          service:
            type: ClusterIP
            port: 2801
          webui:
            enabled: true
            redis:
              storageclass: ""
              storagesize: "1Gi"
            service:
              type: LoadBalancer
              port: 2802
              annotations:
                service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
                service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
            ingress:
              enabled: false
            resources:
              requests:
                cpu: 100m
                memory: 128Mi
              limits:
                cpu: 500m
                memory: 256Mi
  destination:
    server: https://kubernetes.default.svc
    namespace: falco
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
  revisionHistoryLimit: 3